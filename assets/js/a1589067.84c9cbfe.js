"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8388],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5165:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),i=n(9763);const o={sidebar_position:1},l="Getting started",s={unversionedId:"fundamentals/getting-started",id:"version-1.x/fundamentals/getting-started",title:"Getting started",description:"What to expect",source:"@site/versioned_docs/version-1.x/fundamentals/getting-started.mdx",sourceDirName:"fundamentals",slug:"/fundamentals/getting-started",permalink:"/react-native-bundle-splitter/docs/1.x/fundamentals/getting-started",draft:!1,editUrl:"https://github.com/kirillzyusko/react-native-bundle-splitter/tree/master/docs/versioned_docs/version-1.x/fundamentals/getting-started.mdx",tags:[],version:"1.x",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Fundamentals",permalink:"/react-native-bundle-splitter/docs/1.x/category/fundamentals"},next:{title:"Enabling Ram Bundle",permalink:"/react-native-bundle-splitter/docs/1.x/fundamentals/enabling-ram-bundle"}},c={},p=[{value:"What to expect",id:"what-to-expect",level:2},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting started"),(0,r.kt)("h2",{id:"what-to-expect"},"What to expect"),(0,r.kt)("p",null,'Splitting your bundle into small pieces allows you reduce size of main bundle, which is loaded on application startup. It means, that you can load only necessary things, such as login pages, which user inevitably will see if open an application. And only "necessary" things will be in main bundle. Thus, this means that ',(0,r.kt)("strong",{parentName:"p"},"the time of initial launch of the application will be minimized")," and ",(0,r.kt)("strong",{parentName:"p"},"memory consumption will be decreased"),", since often in applications is a lot of code (components and screens) that the user may simply not see."),(0,r.kt)("p",{style:{textAlign:"center"}},(0,r.kt)("img",{src:i.Z}),(0,r.kt)("i",null,"On green part of this picture, you can see that all components/screens are divided into different groups. It allows you to load the application much faster, because instead of loading the entire bundle (red picture), you can load only the parts that you need.")),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("p",null,"This library is add-on on react-native API. But this library has some features, and here is list of them:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Enhanced cache management"),". This library provide a way for caching yours components. This mechanism allows you to improve performance of your application and help to avoid unnecessary reloading yours components, which were already loaded."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ability to preload component"),". You can preload components in background, which user may see in the nearest future. It allows to make UI experience more smooth and use your components from cache without any intermittentions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Supporting all navigation libraries"),". This library is compatible with all most known navigation libraries, such as ",(0,r.kt)("a",{parentName:"li",href:"https://reactnavigation.org/"},"react-navigation"),", ",(0,r.kt)("a",{parentName:"li",href:"https://wix.github.io/react-native-navigation/#/"},"react-native-navigation")," and more others.")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Install the react-native-bundle-splitter package in your React Native project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-native-bundle-splitter\n# or with npm\n# npm install react-native-bundle-splitter --save\n")),(0,r.kt)("p",null,"This module does not use any native (platform) dependencies and does not need to be linked. So installation process basically is finished. But you also need to enable ",(0,r.kt)("inlineCode",{parentName:"p"},"RAM bundles")," feature in your application. To see how to do it, please read ",(0,r.kt)("a",{parentName:"p",href:"./enabling-ram-bundle"},"the guide"),"."),(0,r.kt)("admonition",{title:"Minimal react-native version",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You need to use react-native 0.59 or higher, since feature with inline requires is available out-of-box only from this version.")))}d.isMDXComponent=!0},9763:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/bundle-splitting-2bf34a54f8adc41f1cfe279cea69dc9e.png"}}]);